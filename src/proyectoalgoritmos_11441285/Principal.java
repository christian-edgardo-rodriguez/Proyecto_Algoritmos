/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoalgoritmos_11441285;

import com.mxgraph.model.mxCell;
import com.mxgraph.model.mxICell;
import com.mxgraph.swing.mxGraphComponent;
import com.mxgraph.view.mxGraph;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Familia Rodriguez
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_knapsack = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_peso = new javax.swing.JTextField();
        tf_valor = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        tf_capacidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tf_tiempo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tf_resultado = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        jd_respuestaVC = new javax.swing.JDialog();
        if_resultado = new javax.swing.JInternalFrame();
        jLabel11 = new javax.swing.JLabel();
        tf_resultadoVC = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tf_tiempoVC = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        if_grafo = new javax.swing.JInternalFrame();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tf_vertice = new javax.swing.JTextField();
        tf_verticeFuente = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        tf_verticeDestino = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        jLabel2.setText("KnapSack");

        jLabel3.setText("Peso");

        jLabel4.setText("Valor");

        jButton3.setText("Agregar a Lista");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Capacidad");

        jButton4.setText("Realizar Calculos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setText("Tiempo de Ejecuci√≥n");

        tf_tiempo.setEditable(false);

        jLabel7.setText("Resultado");

        tf_resultado.setEditable(false);

        tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Peso", "Valor"
            }
        ));
        jScrollPane1.setViewportView(tabla1);

        javax.swing.GroupLayout jd_knapsackLayout = new javax.swing.GroupLayout(jd_knapsack.getContentPane());
        jd_knapsack.getContentPane().setLayout(jd_knapsackLayout);
        jd_knapsackLayout.setHorizontalGroup(
            jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_knapsackLayout.createSequentialGroup()
                .addGroup(jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_knapsackLayout.createSequentialGroup()
                        .addGroup(jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_knapsackLayout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addComponent(jButton4))
                            .addGroup(jd_knapsackLayout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jd_knapsackLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6))
                            .addGroup(jd_knapsackLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tf_resultado, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_tiempo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(jd_knapsackLayout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addGroup(jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(23, 23, 23)
                                .addGroup(jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tf_valor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                        .addComponent(tf_peso, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tf_capacidad)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_knapsackLayout.createSequentialGroup()
                        .addGap(0, 15, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jd_knapsackLayout.setVerticalGroup(
            jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_knapsackLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_peso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(34, 34, 34)
                .addGroup(jd_knapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tf_capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(tf_resultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        if_resultado.setVisible(true);

        javax.swing.GroupLayout if_resultadoLayout = new javax.swing.GroupLayout(if_resultado.getContentPane());
        if_resultado.getContentPane().setLayout(if_resultadoLayout);
        if_resultadoLayout.setHorizontalGroup(
            if_resultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        if_resultadoLayout.setVerticalGroup(
            if_resultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        jLabel11.setText("Conjunto Resultante");

        tf_resultadoVC.setEditable(false);

        jLabel12.setText("Tiempo de Ejecuci√≥n");

        tf_tiempoVC.setEditable(false);

        jButton8.setText("Mostrar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Refrescar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_respuestaVCLayout = new javax.swing.GroupLayout(jd_respuestaVC.getContentPane());
        jd_respuestaVC.getContentPane().setLayout(jd_respuestaVCLayout);
        jd_respuestaVCLayout.setHorizontalGroup(
            jd_respuestaVCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_respuestaVCLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(if_resultado)
                .addContainerGap())
            .addGroup(jd_respuestaVCLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jd_respuestaVCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_respuestaVCLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(226, 226, 226)
                        .addComponent(jLabel12))
                    .addGroup(jd_respuestaVCLayout.createSequentialGroup()
                        .addComponent(tf_resultadoVC, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(tf_tiempoVC, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jd_respuestaVCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(64, 64, 64))
        );
        jd_respuestaVCLayout.setVerticalGroup(
            jd_respuestaVCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_respuestaVCLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(if_resultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jd_respuestaVCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_respuestaVCLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jd_respuestaVCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jd_respuestaVCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_resultadoVC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_tiempoVC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jd_respuestaVCLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8)))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("KnapSack");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Vertex Cover");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Proyecto de Analisis de Algoritmos");

        if_grafo.setVisible(true);

        javax.swing.GroupLayout if_grafoLayout = new javax.swing.GroupLayout(if_grafo.getContentPane());
        if_grafo.getContentPane().setLayout(if_grafoLayout);
        if_grafoLayout.setHorizontalGroup(
            if_grafoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        if_grafoLayout.setVerticalGroup(
            if_grafoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        jLabel8.setText("Vertice a Crear");

        jLabel9.setText("Vertice 1");

        jButton5.setText("Crear Vertice");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel10.setText("Vertice 2");

        jButton6.setText("Agregar Arista");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Nuevo");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tf_vertice)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_verticeFuente, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tf_verticeDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                                        .addComponent(jButton6))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(304, 304, 304)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(47, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(if_grafo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(234, 234, 234)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(jButton7)
                                .addGap(29, 29, 29)
                                .addComponent(jButton2)
                                .addGap(29, 29, 29)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(if_grafo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_vertice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_verticeFuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_verticeDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.jd_knapsack.setModal(true);
        this.jd_knapsack.pack();
        this.jd_knapsack.setLocationRelativeTo(this);
        this.jd_knapsack.setVisible(true);
        this.tf_resultado.setText("");
        this.tf_tiempo.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (!this.tf_capacidad.getText().isEmpty()) {
            capacidad = Integer.parseInt(this.tf_capacidad.getText());
            long tiempoInicial = System.nanoTime();
            this.tf_resultado.setText(knapSackRecursivo(capacidad, pesosValores, valores, valores.size())+"");
            long tiempoFinal = System.nanoTime();
            double duracion = ((double)(tiempoFinal - tiempoInicial))/ 1000000000.0;
            this.tf_tiempo.setText(duracion+" segundos");
            this.tf_capacidad.setText("");
        }else{
            JOptionPane.showMessageDialog(this, "El campo de capacidad esta vacio"
                + ", no se pudo realizar el calculo.", "Campo Vacio", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int peso, valor;
        if (!this.tf_peso.getText().isEmpty() && !this.tf_valor.getText().isEmpty()) {
            peso = Integer.parseInt(this.tf_peso.getText());
            valor = Integer.parseInt(this.tf_valor.getText());
            pesosValores.add(peso);
            valores.add(valor);
            DefaultTableModel modelo = (DefaultTableModel)tabla1.getModel();
            Object[] newrow={peso, valor};
            modelo.addRow(newrow);
            tabla1.setModel(modelo);
            this.tf_peso.setText("");
            this.tf_valor.setText("");
        }else{
            JOptionPane.showMessageDialog(this, "Uno o ambos campos estan vacios"
                + ", no se pudo agregar a la lista.", "Campo Vacio", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        componente.getGraph().getModel().beginUpdate();
        int numero = Integer.parseInt(this.tf_vertice.getText());
        try {
            if (!vertices.contains(numero)) {
                componente.getGraph().insertVertex(padre, this.tf_vertice.getText(), this.tf_vertice.getText(),
                    posicionGrafo(400), posicionGrafo(400), 80, 30);
                vertices.add(numero);
                System.out.println("Se ha agregado " + numero + " a la lista de vertices");
                JOptionPane.showMessageDialog(this, "Vertice Creado", "Exito", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "Campo Vacio o Vertice ya Creado anteriormente"
                    , "No se pudo crear vertice", JOptionPane.ERROR_MESSAGE);
            }
            this.tf_vertice.setText("");
        } finally {
            componente.getGraph().getModel().endUpdate();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        mxICell vertice1 = new mxCell();
        mxICell vertice2 = new mxCell();
        vertice1.setValue(this.tf_verticeFuente.getText());
        vertice2.setValue(this.tf_verticeDestino.getText());
        int posicionX = Integer.parseInt(this.tf_verticeFuente.getText());
        int posicionY = Integer.parseInt(this.tf_verticeDestino.getText());
        componente.getGraph().getModel().beginUpdate();
        try {
            if (!(posicionX==posicionY)&& existeVertice(aristas, posicionX, posicionY)==false) {
                if (!vertices.contains(posicionX)) {
                    JOptionPane.showMessageDialog(this, "Primer vertice seleccionado no existe"
                        , "No se pudo crear la arista", JOptionPane.ERROR_MESSAGE);
                }else if (!vertices.contains(posicionY)) {
                    JOptionPane.showMessageDialog(this, "Segundo vertice seleccionado no existe"
                        , "No se pudo crear la arista", JOptionPane.ERROR_MESSAGE);
                }else{
                    componente.getGraph().insertEdge(padre, this.tf_verticeFuente.getText(), this.tf_verticeFuente.getText(), vertice1, vertice2);
                    componente.getGraph().insertEdge(padre, this.tf_verticeDestino.getText(), this.tf_verticeDestino.getText(), vertice2, vertice1);
                    aristas.add(new Arista(posicionX, posicionY));
                    JOptionPane.showMessageDialog(this, "Arista Creada", "Exito", JOptionPane.INFORMATION_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Campos Vacios o Arista ya creada anteriormente"
                    , "No se pudo crear la arista", JOptionPane.ERROR_MESSAGE);
            }
            this.tf_verticeFuente.setText("");
            this.tf_verticeDestino.setText("");
        } finally {
            componente.getGraph().getModel().endUpdate();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        grafo = new mxGraph();
        padre = grafo.getDefaultParent();
        componente = new mxGraphComponent(grafo);
        componente.setSize(this.if_grafo.getSize());
        vertices = new ArrayList();
        aristas = new ArrayList();
        vertexCoverResp = new ArrayList();
        this.if_grafo.getContentPane().add(componente);
        this.repaint();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Collections.sort(vertices);
        System.out.println("Size de Aristas: "+aristas.size());
        System.out.println("Size de Vertices: "+vertices.size());
        System.out.println("Aristas: ");
        for (int i = 0; i < aristas.size(); i++) {
            System.out.println("{"+aristas.get(i).getX()+", "+aristas.get(i).getY()+"}");
        }
        System.out.println("Vertices: ");
        for (int i = 0; i < vertices.size(); i++) {
            System.out.println(vertices.get(i));
        }
        long tiempoInicial = System.nanoTime();        
        vertexCoverResp = vertexCover(vertices, aristas);
        this.tf_resultadoVC.setText(vertexCoverResp.toString());
        long tiempoFinal = System.nanoTime();
        double duracion = ((double)(tiempoFinal - tiempoInicial))/ 1000000000.0;
        this.tf_tiempoVC.setText(duracion+" segundos");
        System.out.println("El tama√±o de vertexCover es: "+vertexCoverResp.size());
        System.out.println("El arreglo es: "+vertexCoverResp);
        this.jd_respuestaVC.setModal(true);
        this.jd_respuestaVC.pack();
        this.jd_respuestaVC.setLocationRelativeTo(this);
        this.jd_respuestaVC.setVisible(true);      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        componente2.getGraph().getModel().beginUpdate();
        try {
            for (int i = 0; i < vertexCoverResp.size(); i++) {
                componente2.getGraph().insertVertex(padre2, vertexCoverResp.get(i).toString(), vertexCoverResp.get(i).toString(),
                    posicionGrafo(400), posicionGrafo(400), 80, 30);
            }
        } finally {
            componente2.getGraph().getModel().endUpdate();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        grafo2 = new mxGraph();
        padre2 = grafo2.getDefaultParent();
        componente2 = new mxGraphComponent(grafo2);
        componente2.setSize(this.if_resultado.getSize());
        this.if_resultado.getContentPane().add(componente2);
        this.if_resultado.repaint();
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    
    public static int knapSackRecursivo(int peso, ArrayList pesosValores, ArrayList valores, int size) {
        if (size == 0 || peso == 0) {
            return 0;
        }
        if (Integer.parseInt(pesosValores.get(size-1).toString()) > peso) {
            return knapSackRecursivo(peso, pesosValores, valores, size - 1);
        } else {
            return Math.max(Integer.parseInt(valores.get(size-1).toString()) + 
                    knapSackRecursivo(peso - Integer.parseInt(pesosValores.get(size-1).toString()), pesosValores, valores, size - 1),
                    knapSackRecursivo(peso, pesosValores, valores, size - 1)
            );
        }
    }
    
    public static int posicionGrafo(int posicion) {
        Random random = new Random();
        return random.nextInt(posicion) + 1;
    }
    
    private static boolean existeVertice(ArrayList<Arista> aristas, int posicionX, int posicionY){
        for (int i = 0; i < aristas.size(); i++) {
            if ((aristas.get(i).getX() == posicionX && aristas.get(i).getY() == posicionY)
                    ||(aristas.get(i).getY() == posicionX && aristas.get(i).getX() == posicionY)) {
                return true;
            }
        }
        return false;
    }
    
    private static ArrayList vertexCover(ArrayList <Integer> vertices, ArrayList<Arista> aristas){
        ArrayList<Integer> temp = new ArrayList();
        ArrayList<Integer> vertexCover = new ArrayList();
        int numero;
        for (int i = vertices.size()-1; i >= 0; i--) {
            numero = vertices.get(i);
            if (!temp.contains(numero)) {
                for (int j = 0; j < aristas.size(); j++) {
                    if (aristas.get(j).getX()==numero) {
                        temp.add(aristas.get(j).getY());
                    }else if (aristas.get(j).getY()==numero) {
                        temp.add(aristas.get(j).getX());
                    }
                }
            }
        }
        Collections.sort(temp);
        for (int i = 0; i < temp.size(); i++) {
            if (!vertexCover.contains(temp.get(i))) {
                vertexCover.add(temp.get(i));
            }
        }
        return vertexCover;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame if_grafo;
    private javax.swing.JInternalFrame if_resultado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jd_knapsack;
    private javax.swing.JDialog jd_respuestaVC;
    private javax.swing.JTable tabla1;
    private javax.swing.JTextField tf_capacidad;
    private javax.swing.JTextField tf_peso;
    private javax.swing.JTextField tf_resultado;
    private javax.swing.JTextField tf_resultadoVC;
    private javax.swing.JTextField tf_tiempo;
    private javax.swing.JTextField tf_tiempoVC;
    private javax.swing.JTextField tf_valor;
    private javax.swing.JTextField tf_vertice;
    private javax.swing.JTextField tf_verticeDestino;
    private javax.swing.JTextField tf_verticeFuente;
    // End of variables declaration//GEN-END:variables
    ArrayList<Integer> valores = new ArrayList();
    ArrayList<Integer> pesosValores = new ArrayList();
    int capacidad;
    mxGraph grafo;
    Object padre;
    mxGraphComponent componente;
    ArrayList<Integer> vertices;
    ArrayList<Arista> aristas;
    ArrayList vertexCoverResp;
    mxGraph grafo2;
    Object padre2;
    mxGraphComponent componente2;
}
